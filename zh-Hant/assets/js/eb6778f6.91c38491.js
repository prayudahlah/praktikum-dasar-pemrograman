"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["2"],{81109:function(n,e,r){r.r(e),r.d(e,{metadata:()=>i,contentTitle:()=>a,default:()=>c,assets:()=>d,toc:()=>o,frontMatter:()=>s});var i=JSON.parse('{"type":"mdx","permalink":"/praktikum-dasar-pemrograman/zh-Hant/demo","source":"@site/i18n/zh-Hant/docusaurus-plugin-content-pages/demo.md","title":"Brython \u7BC4\u4F8B","description":"\u8F38\u5165\u8F38\u51FA","frontMatter":{},"unlisted":false}'),t=r("85893"),l=r("50065");let s={},a="Brython \u7BC4\u4F8B",d={},o=[{value:"\u8F38\u5165\u8F38\u51FA",id:"\u8F38\u5165\u8F38\u51FA",level:2},{value:"\u70CF\u9F9C\u5716\u5F62",id:"\u70CF\u9F9C\u5716\u5F62",level:2},{value:"\u5206\u5F62",id:"\u5206\u5F62",level:2},{value:"\u904A\u6232\u5FAA\u74B0",id:"\u904A\u6232\u5FAA\u74B0",level:2}];function p(n){let e={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,l.a)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"brython-\u7BC4\u4F8B",children:"Brython \u7BC4\u4F8B"})}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-py",metastring:"live_py",children:"print('Live Brython')\n"})}),"\n",(0,t.jsx)(e.h2,{id:"\u8F38\u5165\u8F38\u51FA",children:"\u8F38\u5165\u8F38\u51FA"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-py",metastring:"live_py title=guess.py",children:"from browser import alert\nfrom random import randint \n\nnumber = randint(0, 100)\nguessed = -1\nattempt = 1\n\nwhile guessed != number:\n    guessed = input(f'{attempt} \u5617\u8A66\uFF1A\u8ACB\u8F38\u5165 0 \u5230 100 \u4E4B\u9593\u7684\u6578\u5B57')\n    if guessed == '':\n        break\n    try:\n        guessed = int(guessed)\n    except:\n        alert('\u932F\u8AA4\uFF0C\u9019\u4E0D\u662F\u4E00\u500B\u6709\u6548\u7684\u6578\u5B57')\n        continue\n    attempt += 1\n    if guessed == number:\n        alert(f'\u8036 \uD83E\uDD73\uFF0C\u4F60\u5728 {attempt} \u6B21\u5617\u8A66\u4E2D\u627E\u5230\u4E86\u6578\u5B57 {number}!')\n        break\n    elif guessed > number:\n        alert(f'\u8F38\u5165\u7684\u6578\u5B57 {guessed} \u592A\u5927\u4E86')\n    else:\n        alert(f'\u8F38\u5165\u7684\u6578\u5B57 {guessed} \u592A\u5C0F\u4E86')\n\nif guessed == number:\n    print(f'\u4F60\u5728 {attempt} \u6B21\u5617\u8A66\u4E2D\u627E\u5230\u4E86\u4F60\u5C0B\u627E\u7684\u6578\u5B57 {number}\u3002\uD83E\uDD73')\nelse:\n    print(f'\u641C\u5C0B\u7684\u6578\u5B57\u662F {number}')\n"})}),"\n",(0,t.jsx)(e.h2,{id:"\u70CF\u9F9C\u5716\u5F62",children:"\u70CF\u9F9C\u5716\u5F62"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-py",metastring:"live_py title=turtles.py",children:"from turtle import *\ncolor('red', 'yellow')\nbegin_fill()\nwhile True:\n    forward(200)\n    left(170)\n    p = pos()\n    if abs(p[0]) < 1 and abs(p[1]) < 1:\n        break\nend_fill()\ndone()\n"})}),"\n",(0,t.jsx)(e.h2,{id:"\u5206\u5F62",children:"\u5206\u5F62"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-py",metastring:"live_py title=tree.py",children:"from turtle import *\n\nspeed(0)\npenup()\ngoto(0, -200)\npendown()\nleft(90)\ndef tree(size):\n    if size < 5:\n        forward(size)\n    else:\n        forward(size)\n        left(35)\n        tree(size / 1.5)\n        backward(size / 1.5)\n        right(100)\n        tree(size / 1.5)\n        backward(size / 1.5)\n        left(65)\ntree(120)\n"})}),"\n",(0,t.jsx)(e.h2,{id:"\u904A\u6232\u5FAA\u74B0",children:"\u904A\u6232\u5FAA\u74B0"}),"\n",(0,t.jsxs)(e.p,{children:["\u672A\u6587\u6A94\u5316\u7684\u6982\u5FF5\u9A57\u8B49\uFF0C\u5C55\u793A\u4E86\u66F4\u8907\u96DC\uFF08\u5F88\u9177\uFF01\uFF09\u7684\u529F\u80FD\u3002\u53EF\u4EE5\u901A\u904E\u904B\u884C\u4E0B\u9762\u7684\u7BC4\u4F8B\u4F86\u67E5\u770B ",(0,t.jsx)(e.a,{href:"https://conwaylife.com/",children:"Conway's Game of Life"}),"\u3002"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-py",metastring:"live_py title=conway.py",children:"from grid import Grid\nfrom game import gameloop, sleep\n\n# \u521D\u59CB\u72C0\u614B\ngrid = Grid.from_text('''\n  \n \n \n \n \n \n \n \n  \n  \n  \n           xx  xx            \n            xx x  \n            x  x               \n            x  x  \n            x xx  \n           xx  xx  \n           \n           \n        \n        \n          \n          \n          \n          \n''')\n\ndef neighbours(grid, x, y):\n    nb = []\n    dim_x = len(grid[0])\n    dim_y = len(grid)\n    for i in range(-1, 2):\n        for j in range(-1, 2):\n            if not (i == 0 and j == 0):\n                ny = (y + i) % dim_y\n                nx = (x + j) % dim_x\n                nb.append(grid[ny][nx])\n    return nb\n\ndef live_neighbours(grid, x, y):\n    s = 0\n    for cell in neighbours(grid, x, y):\n        if cell == 'black':\n            s += 1\n    return s\n\n@gameloop\ndef evolution(dt):\n    current = grid.color_grid\n    for x in range(grid.size[1]):\n        for y in range(grid.size[0]):\n            alive = live_neighbours(current, x, y)\n            if current[y][x] == 'black' and 2 <= alive <= 3:\n                grid[y][x].color = 'black'\n            elif current[y][x] != 'black' and alive == 3:\n                grid[y][x].color = 'black'\n            else:\n                grid[y][x].color = 'white'\n    sleep(5)\n\nevolution()\n"})})]})}function c(n={}){let{wrapper:e}={...(0,l.a)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(p,{...n})}):p(n)}}}]);