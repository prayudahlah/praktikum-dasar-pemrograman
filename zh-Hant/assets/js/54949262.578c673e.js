"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["86"],{16515:function(e,n,l){l.r(n),l.d(n,{metadata:()=>r,contentTitle:()=>y,default:()=>v,assets:()=>_,toc:()=>u,frontMatter:()=>g});var r=JSON.parse('{"id":"index","title":"index","description":"\u552F\u8B80\u6A21\u5F0F (readonly)","source":"@site/i18n/zh-Hant/docusaurus-plugin-content-docs/current/index.md","sourceDirName":".","slug":"/","permalink":"/praktikum-dasar-pemrograman/zh-Hant/docs/","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"sidebar_label":"API"},"sidebar":"defaultSidebar","next":{"title":"\u5143\u6CE8\u91CB","permalink":"/praktikum-dasar-pemrograman/zh-Hant/docs/meta-comments/"}}'),s=l("85893"),i=l("50065");l("67294"),l("7227");var o=l("67026");let t="browserWindow_my1Q",d="browserWindowHeader_jXSR",a="buttons_uHc7",c="browserWindowAddressBar_Pd8y",f="dot_giz1",p="browserWindowMenuIcon_Vhuh",x="bar_rrRL",h="browserWindowBody_Idgs";function m(e){let{children:n,minHeight:l,url:r="http://localhost:3000",style:i,bodyStyle:m}=e;return(0,s.jsxs)("div",{className:t,style:{...i,minHeight:l},children:[(0,s.jsxs)("div",{className:d,children:[(0,s.jsxs)("div",{className:a,children:[(0,s.jsx)("span",{className:f,style:{background:"#f25f58"}}),(0,s.jsx)("span",{className:f,style:{background:"#fbbe3c"}}),(0,s.jsx)("span",{className:f,style:{background:"#58cb42"}})]}),(0,s.jsx)("div",{className:(0,o.Z)(c,"text--truncate"),children:r}),(0,s.jsx)("div",{className:p,children:(0,s.jsxs)("div",{children:[(0,s.jsx)("span",{className:x}),(0,s.jsx)("span",{className:x}),(0,s.jsx)("span",{className:x})]})})]}),(0,s.jsx)("div",{className:h,style:m,children:n})]})}let g={sidebar_position:1,sidebar_label:"API"},y=void 0,_={},u=[{value:"\u552F\u8B80\u6A21\u5F0F (readonly)",id:"\u552F\u8B80\u6A21\u5F0F-readonly",level:3},{value:"\u96B1\u85CF\u4E0B\u8F09\u6309\u9215 (noDownload)",id:"\u96B1\u85CF\u4E0B\u8F09\u6309\u9215-nodownload",level:3},{value:"\u96B1\u85CF\u6BD4\u8F03\u6309\u9215 (noCompare)",id:"\u96B1\u85CF\u6BD4\u8F03\u6309\u9215-nocompare",level:3},{value:"\u96B1\u85CF\u91CD\u7F6E\u6309\u9215 (noReset)",id:"\u96B1\u85CF\u91CD\u7F6E\u6309\u9215-noreset",level:3},{value:"\u6EFE\u52D5\u524D\u7684\u6700\u5927\u884C\u6578 (maxLines)",id:"\u6EFE\u52D5\u524D\u7684\u6700\u5927\u884C\u6578-maxlines",level:3},{value:"\u8F38\u5165",id:"\u8F38\u5165",level:3},{value:"\u6301\u4E45\u5316\u8B8A\u66F4 (id)",id:"\u6301\u4E45\u5316\u8B8A\u66F4-id",level:3},{value:"\u4FDD\u5B58\u7248\u672C (versioned)",id:"\u4FDD\u5B58\u7248\u672C-versioned",level:3},{value:"\u96B1\u85CF\u7248\u672C\u6B77\u53F2 (noHistory)",id:"\u96B1\u85CF\u7248\u672C\u6B77\u53F2-nohistory",level:3},{value:"\u914D\u7F6E",id:"\u914D\u7F6E",level:2}];function j(e){let n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,i.a)(),...e.components},{Details:l}=n;return!l&&function(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h3,{id:"\u552F\u8B80\u6A21\u5F0F-readonly",children:"\u552F\u8B80\u6A21\u5F0F (readonly)"}),"\n",(0,s.jsxs)(n.p,{children:["\u60A8\u53EF\u4EE5\u900F\u904E\u6DFB\u52A0 ",(0,s.jsx)(n.code,{children:"readonly"})," \u5143\u6578\u64DA\u5B57\u4E32\u4F86\u4F7F\u7DE8\u8F2F\u5668\u8B8A\u70BA\u552F\u8B80\u6A21\u5F0F\u3002"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-md",children:"```py live_py readonly\nprint('Hello Read-Only Mode')\n```\n"})}),"\n",(0,s.jsx)(m,{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-py",metastring:"live_py readonly",children:"print('Hello Read-Only Mode')\n"})})}),"\n",(0,s.jsxs)(n.admonition,{title:"\u8207\u6301\u4E45\u5316\u4EE3\u78BC\u4E00\u8D77\u4F7F\u7528",type:"tip",children:[(0,s.jsx)(n.p,{children:"\u7576\u4EE3\u78BC\u88AB\u6301\u4E45\u5316\u6642\uFF0C\u4ECD\u7136\u6703\u61C9\u7528\u552F\u8B80\u6A21\u5F0F\u3002"}),(0,s.jsxs)(l,{children:[(0,s.jsx)("summary",{children:"\u4F7F\u7528\u6848\u4F8B: \u5B78\u6821\u7684\u8001\u5E2B"}),(0,s.jsxs)(n.p,{children:["\u9019\u5728\u5B78\u6821\u7684\u4E0A\u4E0B\u6587\u4E2D\u7279\u5225\u6709\u7528\uFF0C\u5176\u4E2D\u4E00\u4E9B\u7DF4\u7FD2/\u8003\u8A66\u53EA\u80FD\u5728\u7D66\u5B9A\u7684\u6642\u9593\u5167\u5B8C\u6210\uFF0C\u4F46\u60A8\u5E0C\u671B\u5C0D\u63D0\u4EA4\u7684\u89E3\u6C7A\u65B9\u6848\u9032\u884C\u53CD\u994B\u3002\u7136\u5F8C\u6DFB\u52A0 ",(0,s.jsx)(n.code,{children:"readonly"})," \u5C6C\u6027\uFF0C\u5B78\u751F\u53EF\u4EE5\u770B\u5230\u4ED6\u5011\u7684\u7DE8\u8F2F\uFF0C\u4F46\u7121\u6CD5\u7DE8\u8F2F\u5B83\u5011\u3002"]}),(0,s.jsxs)(n.p,{children:["\u662F\u7684\uFF0C\u9019\u53EA\u6709\u5728\u60A8\u4FEE\u6539 ",(0,s.jsx)(n.code,{children:"Store.tsxt"}),"/",(0,s.jsx)(n.code,{children:"Storage.ts"})," \u7D44\u4EF6/\u8173\u672C\u4E26\u5F15\u5165\u8207\u670D\u52D9\u5668\u5F8C\u7AEF\u7684\u81EA\u5B9A\u7FA9\u9023\u63A5\u6642\u624D\u80FD\u5B89\u5168\u5DE5\u4F5C\uFF0C\u5176\u4E2D\u4EE3\u78BC\u88AB\u5B58\u5132\u548C\u63D0\u53D6\u3002"]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"\u96B1\u85CF\u4E0B\u8F09\u6309\u9215-nodownload",children:"\u96B1\u85CF\u4E0B\u8F09\u6309\u9215 (noDownload)"}),"\n",(0,s.jsxs)(n.p,{children:["\u60A8\u53EF\u4EE5\u901A\u904E\u6DFB\u52A0 ",(0,s.jsx)(n.code,{children:"noDownload"})," \u5143\u6578\u64DA\u5B57\u4E32\u4F86\u96B1\u85CF\u4E0B\u8F09\u6309\u9215\u3002"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-md",children:"```py live_py noDownload\nprint('Hello No Download Button')\n```\n"})}),"\n",(0,s.jsx)(m,{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-py",metastring:"live_py noDownload",children:"print('Hello No Download Button')\n"})})}),"\n",(0,s.jsx)(n.h3,{id:"\u96B1\u85CF\u6BD4\u8F03\u6309\u9215-nocompare",children:"\u96B1\u85CF\u6BD4\u8F03\u6309\u9215 (noCompare)"}),"\n",(0,s.jsxs)(n.p,{children:["\u6BCF\u7576\u5C0D\u4EE3\u78BC\u9032\u884C\u66F4\u6539\u6642\uFF0C\u60A8\u53EF\u4EE5\u8207\u539F\u59CB\u4EE3\u78BC\u9032\u884C\u6BD4\u8F03\u3002\u60A8\u53EF\u4EE5\u901A\u904E\u6DFB\u52A0 ",(0,s.jsx)(n.code,{children:"noCompare"})," \u5143\u6578\u64DA\u5B57\u4E32\u4F86\u96B1\u85CF\u6BD4\u8F03\u6309\u9215\u3002"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-md",children:"```py live_py noCompare\nprint('Hello No Compare Button')\n```\n"})}),"\n",(0,s.jsxs)(m,{children:[(0,s.jsx)(n.p,{children:"\u9032\u884C\u4E00\u4E9B\u66F4\u6539\u4E26\u6CE8\u610F\u6BD4\u8F03\u6309\u9215\u6C92\u6709\u986F\u793A\u3002"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-py",metastring:"live_py noCompare",children:"print('Hello No Compare Button')\n"})})]}),"\n",(0,s.jsx)(n.h3,{id:"\u96B1\u85CF\u91CD\u7F6E\u6309\u9215-noreset",children:"\u96B1\u85CF\u91CD\u7F6E\u6309\u9215 (noReset)"}),"\n",(0,s.jsxs)(n.p,{children:["\u91CD\u7F6E\u6309\u9215\u5141\u8A31\u60A8\u5C07\u4EE3\u78BC\u91CD\u7F6E\u70BA\u539F\u59CB\u4EE3\u78BC\u3002\u60A8\u53EF\u4EE5\u901A\u904E\u6DFB\u52A0 ",(0,s.jsx)(n.code,{children:"noReset"})," \u5143\u6578\u64DA\u5B57\u4E32\u4F86\u96B1\u85CF\u91CD\u7F6E\u6309\u9215\u3002"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-md",children:"```py live_py noReset\nprint('Hello No Reset Button')\n```\n"})}),"\n",(0,s.jsxs)(m,{children:[(0,s.jsx)(n.p,{children:"\u7DE8\u8F2F\u4EE3\u78BC\u4E26\u6CE8\u610F\u91CD\u7F6E\u6309\u9215\u88AB\u96B1\u85CF\u3002"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-py",metastring:"live_py noReset",children:"print('Hello No Reset Button')\n"})})]}),"\n",(0,s.jsx)(n.h3,{id:"\u6EFE\u52D5\u524D\u7684\u6700\u5927\u884C\u6578-maxlines",children:"\u6EFE\u52D5\u524D\u7684\u6700\u5927\u884C\u6578 (maxLines)"}),"\n",(0,s.jsxs)(n.p,{children:["\u60A8\u53EF\u4EE5\u6307\u5B9A\u5728\u7DE8\u8F2F\u5668\u6EFE\u52D5\u4E4B\u524D\u7684\u6700\u5927\u884C\u6578\u3002\u9019\u5C0D\u65BC\u9577\u4EE3\u78BC\u7247\u6BB5\u5F88\u6709\u7528\u3002\u9810\u8A2D\u503C\u70BA ",(0,s.jsx)(n.code,{children:"25"}),"\u3002"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-md",children:"```py live_py maxLines=5\nprint('Line 1')\nprint('Line 2')\nprint('Line 3')\nprint('Line 4')\nprint('Line 5')\nprint('Line 6 - scrolled')\n```\n"})}),"\n",(0,s.jsx)(m,{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-py",metastring:"live_py maxLines=5",children:"print('Line 1')\nprint('Line 2')\nprint('Line 3')\nprint('Line 4')\nprint('Line 5')\nprint('Line 6 - scrolled')\n"})})}),"\n",(0,s.jsx)(n.h3,{id:"\u8F38\u5165",children:"\u8F38\u5165"}),"\n",(0,s.jsxs)(n.p,{children:["\u9810\u8A2D\u60C5\u6CC1\u4E0B\uFF0C\u4F4D\u65BC ",(0,s.jsx)(n.code,{children:"static/bry-libs/"})," \u76EE\u9304\u4E2D\u7684\u6240\u6709 Python \u8173\u672C\u90FD\u53EF\u4EE5\u76F4\u63A5\u5F9E\u4EE3\u78BC\u5340\u584A\u4E2D\u5C0E\u5165\u3002\u9019\u4F7F\u60A8\u53EF\u4EE5\u5275\u5EFA\u53EF\u91CD\u7528\u7684\u6A21\u584A\uFF0C\u4E26\u5C07\u5176\u5C0E\u5165\u5230\u60A8\u7684\u4EE3\u78BC\u5340\u584A\u4E2D\u3002"]}),"\n",(0,s.jsxs)(n.p,{children:["\u5728\u904B\u884C\u958B\u767C\u670D\u52D9\u5668\u6642\uFF0C\u8173\u672C ",(0,s.jsx)(n.code,{children:"grid.py"})," \u9810\u8A2D\u6DFB\u52A0\u5230 ",(0,s.jsx)(n.code,{children:"static/bry-libs/grid.py"})," \u4E2D\u3002"]}),"\n",(0,s.jsxs)(l,{children:[(0,s.jsxs)("summary",{children:[(0,s.jsx)(n.code,{children:"grid.py"})," \u7684\u5167\u5BB9"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-py",children:"from browser import document # type: ignore\nfrom config import Config # type: ignore\n\nclass Rectangle():\n    col: int\n    row: int\n    ctx = None\n    grid = None\n    init_draw = False\n    def __init__(self, grid, col: int, row: int, color: str = ''):\n        self.col = col\n        self.row = row\n        self.grid = grid\n        self.init_draw = False\n        try:\n            canvas = document[Config.CANVAS_ID]\n            self.ctx = canvas.getContext('2d')\n        except:\n            pass\n        self._color = color\n        \n    def get(self, offset_x: int, offset_y: int):\n        y = (self.row + offset_y) % len(self.grid) # type: ignore\n        x = (self.col + offset_x) % len(self.grid[y]) # type: ignore\n        return self.grid[y][x] # type: ignore\n\n    @property\n    def color(self):\n        return self._color\n\n    @color.setter\n    def color(self, color: str):\n        if color == '':\n            color = 'rgba(0,0,0,0)'\n\n        if self._color == color and self.init_draw:\n            return\n        self._color = color\n        self.init_draw = True\n        self.draw()\n\n    def draw(self):\n        scale = self.grid.scale # type: ignore\n        x = self.col * scale\n        y = self.row * scale\n        try:\n            self.ctx.clearRect(x, y, scale, scale) # type: ignore\n            self.ctx.lineWidth = 0 # type: ignore\n            self.ctx.fillStyle = self.color # type: ignore\n            self.ctx.fillRect(x, y, scale, scale) # type: ignore\n        except:\n            pass\n\n    def copy(self, grid):\n        return Rectangle(grid, self.col, self.row, self.color)\n\n    def __repr__(self):\n        return self.color\n\nclass RectLine():\n    line: list = []\n    n = 0\n    max = 0\n    def __init__(self, grid, row, cols: int | list, color: str = ''):\n        self.grid = grid\n        if type(cols) == list:\n            self.line = cols # type: ignore\n        else:\n            self.line = [Rectangle(grid, col, row, color) for col in range(cols)] # type: ignore\n        self.max = len(self.line) # type: ignore\n    \n    def __getitem__(self, key):\n        return self.line[key]\n\n    def __setitem__(self, key, value):\n        self.line[key].color = value\n\n    def __repr__(self):\n        return ', '.join([f'{r.color}' for r in self.line])\n\n    def __iter__(self):\n        self.n = 0\n        return self\n\n    def __next__(self):\n        if self.n < self.max:\n            result = self[self.n]\n            self.n += 1\n            return result\n        else:\n            raise StopIteration\n    \n    def __len__(self):\n        return self.max\n\n    def draw(self):\n        for rect in self.line:\n            rect.draw()\n    \n    def copy(self, grid):\n        return RectLine(grid, self.line[0].row, [l.copy(grid) for l in self.line]) # type: ignore\n\nclass Grid():\n    lines = []\n    n = 0\n    max = 0\n    CANVAS_ID = ''\n    WIDTH = 500\n    HEIGHT = 500\n    scale = 10\n    record_gif = False\n    frames = {}\n\n    def __init__(self, rows: int, cols: int, color: str = '', scale: int = -1):\n        if scale < 0:\n            if rows > 0 and cols > 0:\n                scale = min(Grid.WIDTH // cols, Grid.HEIGHT // rows)\n            else:\n                scale = 10\n        self.scale = scale\n        self.lines = [RectLine(self, row, cols, color) for row in range(rows)]\n        self.max = rows\n    \n    @staticmethod\n    def setup(width: int, height: int, record_gif: bool = False):\n        Grid.HEIGHT = height\n        Grid.WIDTH = width\n        Grid.record_gif = record_gif\n        Grid.frames = {}\n        canvas = document[Config.CANVAS_ID]\n        parent = canvas.parent\n        parent.replaceChildren()\n    \n        canv = document.createElement('canvas')\n        canv.style.display = 'block'\n        canv.id = Config.CANVAS_ID;\n        canv.attrs['height'] = height\n        canv.attrs['width'] = width\n        canv.style.width = f'{width}px'\n        canv.style.height = f'{height}px'\n        parent.appendChild(canv)\n\n    @staticmethod\n    def from_bin_text(bin_text: str, colors={'s': 'black', '1': 'black', 'x': 'black', 'bg': ''}):\n        lines = bin_text.lower().splitlines()\n        if 'bg' not in colors:\n            colors['bg'] = ''\n        while len(lines) > 0 and len(lines[0]) == 0:\n            lines.pop(0)\n        size_y = len(lines)\n        if size_y < 1:\n            raise Exception('Grid must have at least one non empty line')\n        size_x = max(map(lambda x: len(x), lines))\n\n        scale = min(Grid.WIDTH // size_x, Grid.HEIGHT // size_y)\n        grid = Grid(0, 0, colors['bg'], scale)\n        raw_grid = []\n        for line in lines:\n            raw_line = []\n            for x in range(size_x):\n                if x < len(line):\n                    raw_line.append(Rectangle(grid, x, len(raw_grid), colors.get(line[x], colors['bg'])))\n                else:\n                    raw_line.append(Rectangle(grid, x, len(raw_grid), colors['bg']))\n            raw_grid.append(RectLine(grid, len(raw_grid), raw_line))\n        grid.set_lines(raw_grid)\n        grid.draw()\n        return grid\n        \n\n    def set_lines(self, lines):\n        self.lines = lines\n        self.max = len(lines)\n\n        \n    def tolist(self):\n        return [[c.color for c in l.line] for l in self.lines]\n\n    @property\n    def color_grid(self):\n        return self.tolist()\n\n    @property\n    def grid(self):\n        return self.tolist()\n\n    @property\n    def size(self):\n        return (self.dim_y, self.dim_x)\n\n    @property\n    def dim_x(self):\n        if self.max < 1:\n            return 0\n        return len(self[0])\n\n    @property\n    def dim_y(self):\n        return len(self.lines)\n\n    @staticmethod\n    def clear_canvas():\n        try:\n            canvas = document[Config.CANVAS_ID]\n            ctx = canvas.getContext('2d')\n            ctx.clearRect(0, 0, Grid.WIDTH, Grid.HEIGHT) # type: ignore\n        except:\n            pass\n\n\n    def draw(self):\n        for line in self.lines:\n            line.draw()\n\n    @staticmethod\n    def gif_add():\n        if Grid.record_gif:\n            canvas = document[Config.CANVAS_ID]\n            frameName = 'frame_' + str(len(Grid.frames)).rjust(3, '0')\n            Grid.frames[frameName] = canvas.toDataURL('image/png');\n\n\n\n    def fill(self, color: str = ''):\n        for line in self.lines:\n            for cell in line:\n                cell.color = color\n\n    def copy(self):\n        cp = Grid(0, 0)\n        lines = [l.copy(cp) for l in self.lines]\n        cp.set_lines(lines)\n        return cp\n\n\n    def __getitem__(self, key):\n        return self.lines[key]\n\n    def __setitem__(self, key, value):\n        self.lines[key] = value\n        \n    def __repr__(self):\n        rep = ''\n        for line in self.lines:\n            rep += f'{line}'\n            rep += '\\n'\n        return rep\n    \n    def __iter__(self):\n        self.n = 0\n        return self\n\n    def __next__(self):\n        if self.n < self.max:\n            result = self[self.n]\n            self.n += 1\n            return result\n        else:\n            raise StopIteration\n\n    def __len__(self):\n        return self.max\n"})})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-py",metastring:"live_py title=grid__example.py",children:"from grid import Grid\nGrid.clear_canvas()\nsmile = Grid.from_text('''\n       \n x    x\n \n \n \n x    x \n xxxxxx\n \n''')\nsmile.draw()\n"})}),"\n",(0,s.jsx)(n.h3,{id:"\u6301\u4E45\u5316\u8B8A\u66F4-id",children:"\u6301\u4E45\u5316\u8B8A\u66F4 (id)"}),"\n",(0,s.jsxs)(n.p,{children:["\u60A8\u53EF\u4EE5\u901A\u904E\u70BA\u4EE3\u78BC\u5340\u584A\u6DFB\u52A0 ",(0,s.jsx)(n.code,{children:"id"})," \u4F86\u6301\u4E45\u5316\u7DE8\u8F2F\u5668\u4E2D\u7684\u8B8A\u66F4\u3002\u9019\u4E9B\u8B8A\u66F4\u5C07\u5B58\u5132\u5728\u672C\u5730\u5132\u5B58\u4E2D\uFF0C\u4E26\u4E14\u7576\u9801\u9762\u91CD\u65B0\u52A0\u8F09\u6642\uFF0C\u5167\u5BB9\u5C07\u6703\u6062\u5FA9\u3002"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-md",children:"```py live_py id=example\n# \u6B64\u4EE3\u78BC\u5340\u584A\u4E2D\u7684\u8B8A\u66F4\u5C07\u88AB\u5B58\u5132\u5728\u672C\u5730\u5132\u5B58\u4E2D\n```\n"})}),"\n",(0,s.jsx)(m,{children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-py",metastring:"live_py id=example",children:"# \u6B64\u4EE3\u78BC\u5340\u584A\u4E2D\u7684\u8B8A\u66F4\u5C07\u88AB\u5B58\u5132\u5728\u672C\u5730\u5132\u5B58\u4E2D\n"})})}),"\n",(0,s.jsx)(n.admonition,{title:"\u552F\u4E00 ID",type:"warning",children:(0,s.jsx)(n.p,{children:"\u78BA\u4FDD\u6574\u500B\u7DB2\u7AD9\u4E0A\u7684 ID\uFF08\u4E0D\u50C5\u50C5\u662F\u9019\u4E00\u9801\uFF09\u662F\u552F\u4E00\u7684\uFF0C\u5426\u5247\u7528\u6236\u53EF\u80FD\u6703\u9047\u5230\u610F\u5916\u7684\u884C\u70BA\u3002\uFF08\u4EE3\u78BC\u5C07\u88AB\u5177\u6709\u76F8\u540C ID \u7684\u6700\u5F8C\u4E00\u500B\u8B8A\u66F4\u7684\u4EE3\u78BC\u5340\u584A\u8986\u84CB\uFF09\u3002"})}),"\n",(0,s.jsx)(n.admonition,{title:"UUID",type:"tip",children:(0,s.jsxs)(n.p,{children:["\u78BA\u4FDD\u552F\u4E00 ID \u7684\u4E00\u500B\u597D\u65B9\u6CD5\u662F\u4F7F\u7528 UUID\u3002\u5C0D\u65BC VS Code \u7528\u6236\uFF0C\u64F4\u5C55 ",(0,s.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=motivesoft.vscode-uuid-generator",children:"UUID Generator by Motivesoft"})," \u53EF\u4EE5\u8F15\u9B06\u63D2\u5165\u65B0\u7684 UUID\uFF0C\u4F7F\u7528\u5FEB\u6377\u9375 ",(0,s.jsx)(n.code,{children:"Alt+Shift+U"}),"\u3002"]})}),"\n",(0,s.jsx)(n.h3,{id:"\u4FDD\u5B58\u7248\u672C-versioned",children:"\u4FDD\u5B58\u7248\u672C (versioned)"}),"\n",(0,s.jsxs)(n.p,{children:["\u60A8\u53EF\u4EE5\u901A\u904E\u6DFB\u52A0 ",(0,s.jsx)(n.code,{children:"versioned"})," \u5143\u6578\u64DA\u5B57\u4E32\u4F86\u4FDD\u5B58\u4EE3\u78BC\u7684\u7248\u672C\u3002\u9019\u5C07\u70BA\u7DE8\u8F2F\u5668\u6DFB\u52A0\u7248\u672C\u6B77\u53F2\u3002\u6BCF\u6B21\u66F4\u6539\u90FD\u6703\u4FDD\u5B58\u70BA\u65B0\u7248\u672C\uFF0C\u4F46\u6BCF\u79D2\u4E0D\u8D85\u904E\u4E00\u6B21\uFF08\u53EF\u4EE5\u901A\u904E ",(0,s.jsx)(n.code,{children:"docusaurus.config.js"})," \u4E2D\u7684 ",(0,s.jsx)(n.code,{children:"syncMaxOnceEvery"})," \u9078\u9805\u9032\u884C\u914D\u7F6E\uFF09\u3002"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-md",children:"```py live_py versioned id=fe506dd7-1507-4929-ad07-302d22529d79\nprint('Hello Versioned Mode')\n```\n"})}),"\n",(0,s.jsxs)(m,{children:[(0,s.jsx)(n.p,{children:"\u5617\u8A66\u66F4\u6539\u4EE3\u78BC\uFF0C\u7136\u5F8C\u9EDE\u64CA\u7248\u672C\u6B77\u53F2\u8A73\u7D30\u4FE1\u606F\u3002"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-py",metastring:"live_py versioned id=fe506dd7-1507-4929-ad07-302d22529d79",children:"print('Hello Versioned Mode')\n"})})]}),"\n",(0,s.jsx)(n.admonition,{title:"\u50C5\u5728\u6301\u4E45\u5316\u6A21\u5F0F\u4E0B",type:"warning",children:(0,s.jsxs)(n.p,{children:["\u7248\u672C\u6A21\u5F0F\u50C5\u5728\u8207 ",(0,s.jsx)(n.code,{children:"id"})," \u5C6C\u6027\u4E00\u8D77\u4F7F\u7528\u6642\u6709\u6548\u3002",(0,s.jsx)(n.code,{children:"id"})," \u5C6C\u6027\u7528\u65BC\u5C07\u7248\u672C\u5B58\u5132\u5728\u672C\u5730\u5132\u5B58\u4E2D\u3002"]})}),"\n",(0,s.jsx)(n.h3,{id:"\u96B1\u85CF\u7248\u672C\u6B77\u53F2-nohistory",children:"\u96B1\u85CF\u7248\u672C\u6B77\u53F2 (noHistory)"}),"\n",(0,s.jsxs)(n.p,{children:["\u60A8\u53EF\u4EE5\u901A\u904E\u6DFB\u52A0 ",(0,s.jsx)(n.code,{children:"noHistory"})," \u5143\u6578\u64DA\u5B57\u4E32\u4F86\u96B1\u85CF\u7248\u672C\u6B77\u53F2\u3002\u9019\u53EA\u6703\u96B1\u85CF\u6B77\u53F2\u8A18\u9304\uFF0C\u5C0D ",(0,s.jsx)(n.code,{children:"versioned"})," \u5C6C\u6027\u6C92\u6709\u5F71\u97FF\u3002"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-md",children:"```py live_py versioned noHistory\nprint('Hello No History')\n```\n"})}),"\n",(0,s.jsx)(n.h2,{id:"\u914D\u7F6E",children:"\u914D\u7F6E"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",metastring:"title=docusaurus.config.js",children:"export default {\n  themes: [\n    [\n      'theme-live-codeblock',\n      {\n        /**\n         * brython \u6E90\u6587\u4EF6\u7684\u8DEF\u5F91\u3002\n         * @default 'https://raw.githack.com/brython-dev/brython/master/www/src/brython.js'\n         */\n        brythonSrc: string;\n        /**\n         * brython \u6A19\u6E96\u5EAB\u6E90\u6587\u4EF6\u7684\u8DEF\u5F91\u3002\n         * @default 'https://raw.githack.com/brython-dev/brython/master/www/src/brython_stdlib.js'\n         */\n        brythonStdlibSrc: string;\n        /**\n         * brython \u7279\u5B9A\u5EAB\u7684\u8CC7\u6599\u593E\u8DEF\u5F91\u3002\n         * \u7576 Python \u6587\u4EF6\u5C0E\u5165\u6A21\u584A\u6642\uFF0C\u8A72\u6A21\u584A\u5C07\u5728\n         * `libDir` \u76EE\u9304\u4E2D\u67E5\u627E\u3002\n         * \u9ED8\u8A8D\u60C5\u6CC1\u4E0B\uFF0ClibDir \u6703\u5728\u975C\u614B\u8CC7\u6599\u593E\u4E2D\u5275\u5EFA\uFF0C\u4E26\u5C07\u6240\u9700\u7684\n         * Python \u6587\u4EF6\u8907\u88FD\u5230\u90A3\u88E1\u3002\u9019\u53EF\u4EE5\u901A\u904E\u5C07 \n         * `skipCopyAssetsToLibDir` \u8A2D\u7F6E\u70BA true \u4E26\u5C07 libDir \u8A2D\u7F6E\u70BA\u81EA\u5B9A\u7FA9\u8DEF\u5F91\u4F86\u66F4\u6539\u3002\n         * \u8ACB\u78BA\u4FDD\u5C07\u6240\u9700\u7684 Python \u6587\u4EF6\u8907\u88FD\u5230\u81EA\u5B9A\u7FA9 libDir\u3002\n         * @default '/bry-libs/'\n         */\n        libDir: string;\n        /**\n         * \u8DF3\u904E\u5C07 brython \u7279\u5B9A\u5EAB\u8907\u88FD\u5230 `libDir`\u3002\n         * \u8ACB\u78BA\u4FDD\u81EA\u884C\u5C07\u6240\u9700\u7684 Python \u6587\u4EF6\u8907\u88FD\u5230\u81EA\u5B9A\u7FA9 libDir\u3002\n         * @ref [\u6240\u9700\u7684 Python \u6587\u4EF6](https://github.com/lebalz/docusaurus-live-brython/tree/main/src/assets)\n         * @default false\n         */\n        skipCopyAssetsToLibDir: boolean;\n        /**\n         * \u6307\u5B9A\u7B49\u5F85\u7684\u6642\u9593\uFF08\u4EE5\u6BEB\u79D2\u70BA\u55AE\u4F4D\uFF09\uFF0C\u4EE5\u5728\u5C07\u7576\u524D\u8B8A\u66F4\u540C\u6B65\u5230\u672C\u5730\u5B58\u5132\u4E4B\u524D\u7B49\u5F85\u3002\n         * \u9019\u6709\u52A9\u65BC\u9632\u6B62\u6BCF\u6B21\u6309\u9375\u6642\u90FD\u5B58\u5132\u4EE3\u78BC\u3002\n         * @default 1000\n         */\n        syncMaxOnceEvery: number;  \n      }\n    ]\n  ],\n};\n"})})]})}function v(e={}){let{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(j,{...e})}):j(e)}}}]);