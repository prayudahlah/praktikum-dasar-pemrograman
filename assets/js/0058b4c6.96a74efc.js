"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([["489"],{67136:function(e){e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"defaultSidebar":[{"type":"link","label":"API","href":"/docs/","docId":"index","unlisted":false},{"type":"link","label":"Meta-Comments","href":"/docs/meta-comments/","docId":"meta-comments/index","unlisted":false},{"type":"link","label":"State Management","href":"/docs/external-stores/","docId":"external-stores/index","unlisted":false},{"type":"category","label":"materi","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"intro","href":"/docs/materi/intro","docId":"materi/intro","unlisted":false}]}]},"docs":{"external-stores/index":{"id":"external-stores/index","title":"State Management","description":"In case you want to store edited code blocks to a database instead of the browser\'s local storage, you can sync changes to docusaurus-live-brython by providing your own state management. This can be done by swizzling CodeEditor/hooks/useScript and CodeEditor/WithScript/ScriptContext. To sync between docusaurus-live-brython and your state management you can use reacts useSyncExternalStore hook.","sidebar":"defaultSidebar"},"index":{"id":"index","title":"docusaurus-live-brython","description":"This theme provides a @theme/CodeEditor component that is powered by Brython. It allows you to execute and edit Python code blocks directly in your markdown files.","sidebar":"defaultSidebar"},"materi/intro":{"id":"materi/intro","title":"intro","description":"","sidebar":"defaultSidebar"},"meta-comments/index":{"id":"meta-comments/index","title":"Meta-Comments","description":"Sometimes you have boilerplate code that you\'d like to insert/execute before or after the content of the live code block is executed. This is where meta-comments come in. Meta-comments are comments that are placed within the content of the code block and are used to split the code into preCode, code and postCode parts. pre- and post- code parts can not be changed by the user, but the code part can be edited by the user.","sidebar":"defaultSidebar"}}}}')}}]);